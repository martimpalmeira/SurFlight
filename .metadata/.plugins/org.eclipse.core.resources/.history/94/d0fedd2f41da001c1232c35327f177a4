import java.util.ArrayList;
import java.util.Date;

public class Viagem {

	private String data;

	private String origem;

	private String destino;

	private int numMaximoMala;

	private int numMaximoBolsa;

	private int numMaximoMochila;

	private int numMaximoPassageiros;

	private ArrayList<Bagagem> bagagens;

	private ArrayList<Passageiro> passageiros;

	public Viagem(String data, String origem, String destino, int numMaximoBolsa, int numMaximoMala,
			int numMaximoMochila, int numMaximoPassageiros) {
		super();
		this.data = data;
		this.origem = origem;
		this.destino = destino;
		this.numMaximoBolsa = numMaximoBolsa;
		this.numMaximoMala = numMaximoMala;
		this.numMaximoMochila = numMaximoMochila;
		this.numMaximoPassageiros = numMaximoPassageiros;
		bagagens = new ArrayList<>();
		passageiros = new ArrayList<>();
	}

	public Passageiro cadastrarPassageiro(String cpf, String nome, String passaporte) {
		Passageiro passageiro = new Passageiro();
		passageiro.setCpf(cpf);
		passageiro.setNome(nome);
		passageiro.setPassaporte(passaporte);
		ArrayList<Bagagem> bagagens = new ArrayList<Bagagem>();
		passageiro.setBagagens(bagagens);
		return passageiro;

	}

	public boolean podeCadastrarBolsa() {
		int numBolsasCadastradas = 0;
		for (int i = 0; i < bagagens.size(); i++) {
			if (bagagens.get(i) instanceof Bolsa) {
				numBolsasCadastradas++;
			}
		}
		if (numBolsasCadastradas < numMaximoBolsa) {
			return true;
		} else {
			return false;
		}
	}

	public boolean podeCadastrarMala() {
		int numMalasCadastradas = 0;
		for (int i = 0; i < bagagens.size(); i++) {
			if (bagagens.get(i) instanceof Mala) {
				numMalasCadastradas++;
			}
		}
		if (numMalasCadastradas < numMaximoMala) {
			return true;
		} else {
			return false;
		}
	}

	public boolean podeCadastrarMochila() {
		int numMochilasCadastradas = 0;
		for (int i = 0; i < bagagens.size(); i++) {
			if (bagagens.get(i) instanceof Mochila) {
				numMochilasCadastradas++;
			}
		}
		if (numMochilasCadastradas < numMaximoMochila) {
			return true;
		} else {
			return false;
		}
	}

	public boolean podeCadastrarBagagemDoPassageiro(Passageiro passageiro) {
		if (passageiro.getBagagens().size() < 2) {
			return true;
		}
		return false;
	}

	public ArrayList<Bagagem> getBagagens() {
		return bagagens;
	}

	public void setBagagens(ArrayList<Bagagem> bagagens) {
		this.bagagens = bagagens;
	}

	public ArrayList<Passageiro> getPassageiros() {
		return passageiros;
	}

	

	public int getNumMaximoPassageiros() {
		return numMaximoPassageiros;
	}

	

	public int getNumMaximoMala() {
		return numMaximoMala;
	}

	

	public int getNumMaximoBolsa() {
		return numMaximoBolsa;
	}

	

	public int getNumMaximoMochila() {
		return numMaximoMochila;
	}



}
